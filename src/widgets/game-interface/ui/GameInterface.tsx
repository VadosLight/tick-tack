import { useState } from "react";
import { GameScene } from "@/widgets/game-scene";
import { MainMenu } from "@/features/main-menu";
import type { GameBoard, GameMode, GameState } from "@/shared/types";
import styles from "../GameInterface.module.css";

export type GameInterfaceProps = {
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–ø—Å—ã –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã
};

export const GameInterface = (props: GameInterfaceProps) => {
  const {} = props;

  const [gameState, setGameState] = useState<GameState>("menu");
  const [gameMode, setGameMode] = useState<GameMode | null>(null);
  const [board, setBoard] = useState<GameBoard>([
    [null, null, null],
    [null, null, null],
    [null, null, null],
  ]);
  const [currentPlayer, setCurrentPlayer] = useState<"X" | "O">("X");

  const handleGameModeSelect = (mode: GameMode) => {
    setGameMode(mode);
    setGameState("playing");
    // –°–±—Ä–æ—Å –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
    setBoard([
      [null, null, null],
      [null, null, null],
      [null, null, null],
    ]);
    setCurrentPlayer("X");
  };

  const handleCellClick = (row: number, col: number) => {
    if (board[row][col] !== null) return;

    const newBoard = board.map((r, rowIndex) =>
      r.map((cell, colIndex) =>
        rowIndex === row && colIndex === col ? currentPlayer : cell
      )
    );

    setBoard(newBoard);

    // –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –±–æ—Ç–∞ (–µ—Å–ª–∏ –∏–≥—Ä–∞–µ–º —Å –±–æ—Ç–æ–º)
    if (gameMode === "vs-bot") {
      // TODO: –î–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –±–æ—Ç–∞
      setCurrentPlayer(currentPlayer === "X" ? "O" : "X");
    } else {
      setCurrentPlayer(currentPlayer === "X" ? "O" : "X");
    }
  };

  const handleBackToMenu = () => {
    setGameState("menu");
    setGameMode(null);
  };

  return (
    <>
      {/* 3D —Å—Ü–µ–Ω–∞ */}
      <div style={{ width: "100vw", height: "100vh" }}>
        <GameScene board={board} onCellClick={handleCellClick} />
      </div>

      {/* –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–≤–µ—Ä—Ö —Å—Ü–µ–Ω—ã */}
      {gameState === "menu" && (
        <MainMenu onGameModeSelect={handleGameModeSelect} />
      )}

      {gameState === "playing" && (
        <div className={styles.gameInfo}>
          <h2 className={styles.gameMode}>
            {gameMode === "vs-bot" ? "ü§ñ –ü—Ä–æ—Ç–∏–≤ –±–æ—Ç–∞" : "üë• –ü—Ä–æ—Ç–∏–≤ –¥—Ä—É–≥–∞"}
          </h2>
          <p className={styles.currentPlayer}>
            –•–æ–¥ –∏–≥—Ä–æ–∫–∞:{" "}
            <span className={styles.playerSymbol}>{currentPlayer}</span>
          </p>
          <button onClick={handleBackToMenu} className={styles.backButton}>
            ‚Üê –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
          </button>
        </div>
      )}
    </>
  );
};
